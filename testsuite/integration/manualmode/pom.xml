<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>31.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <!-- ********************************************************************************** -->
    <!-- ********* Manual-mode Integration Tests for base (EE etc) functionality ********** -->
    <!-- ********************************************************************************** -->
    <artifactId>wildfly-ts-integ-manualmode</artifactId>

    <name>WildFly Test Suite: Integration - Manual Mode Tests -- Base</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <!-- Byteman -->
        <byteman.host>127.0.0.1</byteman.host>
        <byteman.port>17091</byteman.port>

        <multi.channel.provisioning.phase>process-test-resources</multi.channel.provisioning.phase>
        <manifest.url.prefix>file://</manifest.url.prefix>
    </properties>

    <dependencies>
        <!-- These seem to be required first so that jbossws-cxf-client ends up on the class path first. Also required for Java 11 -->
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.resource</groupId>
            <artifactId>jakarta.resource-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.jakarta.xml.ws</groupId>
            <artifactId>jboss-jakarta-xml-ws-api_4.0_spec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-naming-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-commons</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-core-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-cli</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-test-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-model-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Required for the DistributedResourceAdapter1 the getDwm() has to return DistributedWorkManagerImpl otherwise
             the tests fail for some reason. Changing the return type to DistributedWorkManager seems to cause issues -->
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-core-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.interceptor</groupId>
            <artifactId>jakarta.interceptor-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-submit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Runtime-only dependencies -->
        <dependency>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.istack</groupId>
            <artifactId>istack-commons-runtime</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-core-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-bindings-soap</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-databinding-jaxb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-wsdl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.ws.xmlschema</groupId>
            <artifactId>xmlschema-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.angus</groupId>
            <artifactId>angus-activation</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-install</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.jts</groupId>
            <artifactId>narayana-jts-idlj</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.jakarta.xml.soap</groupId>
            <artifactId>jboss-saaj-api_3.0_spec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ws.cxf</groupId>
            <artifactId>jbossws-cxf-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.discovery</groupId>
            <artifactId>wildfly-discovery-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.prospero</groupId>
            <artifactId>prospero-cli</artifactId>
            <classifier>shaded</classifier>
        </dependency>
        <dependency>
            <groupId>org.wildfly.transaction</groupId>
            <artifactId>wildfly-transaction-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-client-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-testsuite-shared</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-ee-channel</artifactId>
            <type>yaml</type>
            <classifier>manifest</classifier>
        </dependency>
        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-ee-feature-pack-product-conf</artifactId>
            <version>100000.0.1.Final-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions combine.children="append">
                    <!-- Copy example configs. -->
                    <execution>
                        <id>ts.config-as.copy-docs-configs</id>
                        <phase>generate-test-resources</phase>
                        <goals><goal>copy-resources</goal></goals>
                        <inherited>true</inherited>
                        <configuration>
                            <outputDirectory>${basedir}/target/wildfly/docs/examples/configs</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${jboss.dist}/docs/examples/configs/</directory>
                                    <includes><include>standalone*.xml</include></includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Update server profile with shared configuration changes -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.org.wildfly.plugin}</version>
                <executions>
                    <execution>
                        <id>ts.config-as.configure-wildfly</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>execute-commands</goal>
                        </goals>
                        <configuration>
                            <offline>true</offline>
                            <scripts>
                                <script>manualmode-all.cli</script>
                            </scripts>
                            <jboss-home>${wildfly.dir}</jboss-home>
                            <stdout>${project.build.directory}/wildfly-plugin.log</stdout>
                            <java-opts>${modular.jdk.args}</java-opts>
                            <system-properties>
                                <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                <module.path>${jboss.dist}/modules</module.path>
                            </system-properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <!-- Generate the keystores and truststore needed for the manualmode tests -->
                    <execution>
                        <id>generate-jboss-stores</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.jboss.as.test.manualmode.ejb.ssl.GenerateJBossStores</mainClass>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>
                    <!-- Executions to provision a multi-channel installation using prospero -->
                    <execution>
                        <id>multi-channel-provisioning-ee</id>
                        <phase>${multi.channel.provisioning.phase}</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.wildfly.test.prospero.cli.ProsperoCliWrapper</mainClass>
                            <commandlineArgs>install --dir=${project.build.directory}/wildfly-multi-channel --fpl=${ee.maven.groupId}:wildfly-ee-galleon-pack:${ee.maven.version} --channel=${ee.maven.groupId}:wildfly-ee-channel:${ee.maven.version}</commandlineArgs>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                    <execution>
                        <id>multi-channel-provisioning-prospero-channel</id>
                        <phase>${multi.channel.provisioning.phase}</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.wildfly.test.prospero.cli.ProsperoCliWrapper</mainClass>
                            <commandlineArgs>channel add --dir=${project.build.directory}/wildfly-multi-channel --channel-name=prospero --manifest=org.wildfly.prospero:prospero-wildfly-galleon-pack:${version.org.wildfly.prospero} --repositories=https://repo1.maven.org/maven2/,${maven.repository.url}</commandlineArgs>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                    <!-- TODO this should not be necessary. Universe artifacts should not have to come via a channel -->
                    <execution>
                        <id>multi-channel-provisioning-galleon-universe</id>
                        <phase>${multi.channel.provisioning.phase}</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.wildfly.test.prospero.cli.ProsperoCliWrapper</mainClass>
                            <commandlineArgs>channel add --dir=${project.build.directory}/wildfly-multi-channel --channel-name=universe --manifest=file://${project.build.directory}/test-classes/community-universe-manifest.yaml --repositories=${maven.repository.url}</commandlineArgs>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                    <execution>
                        <id>multi-channel-provisioning-prospero-fp</id>
                        <phase>${multi.channel.provisioning.phase}</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.wildfly.test.prospero.cli.ProsperoCliWrapper</mainClass>
                            <commandlineArgs>feature-pack add --dir=${project.build.directory}/wildfly-multi-channel --fpl=org.wildfly.prospero:prospero-wildfly-galleon-pack --layers=prospero --yes</commandlineArgs>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                    <execution>
                        <id>multi-channel-provisioning-override</id>
                        <phase>${multi.channel.provisioning.phase}</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.wildfly.test.prospero.cli.ProsperoCliWrapper</mainClass>
                            <commandlineArgs>channel add --dir=${project.build.directory}/wildfly-multi-channel --channel-name=override --manifest=file://${project.build.directory}/test-classes/product-conf-override-manifest.yaml --repositories=${maven.repository.url}</commandlineArgs>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                    <execution>
                        <id>multi-channel-provisioning-update</id>
                        <phase>${multi.channel.provisioning.phase}</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.wildfly.test.prospero.cli.ProsperoCliWrapper</mainClass>
                            <commandlineArgs>update perform --dir=${project.build.directory}/wildfly-multi-channel --yes</commandlineArgs>
                            <cleanupDaemonThreads>false</cleanupDaemonThreads>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Build the server configurations -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions combine.children="append">
                    <execution>
                        <id>build-manual-mode-servers</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <ant antfile="${jbossas.ts.integ.dir}/src/test/scripts/manualmode-build.xml">
                                    <property name="management.address" value="${node0}"/>
                                    <property name="node1" value="${node1}"/>
                                    <property name="node0" value="${node0}"/>
                                    <property name="mcast.ttl" value="${mcast.ttl}"/>
                                    <property name="jboss.dist" value="${jboss.dist}"/>
                                    <target name="build-manual-mode"/>
                                </ant>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Workaround for nasty and hacky tests not cleaning up completely after themselves. -->
                    <reuseForks>false</reuseForks>
                    <environmentVariables>
                        <JBOSS_HOME>${wildfly.dir}</JBOSS_HOME>
                    </environmentVariables>

                    <!-- Parameters to test cases. -->
                    <systemPropertyVariables combine.children="append">
                        <!--<management.address>${node0}</management.address>-->
                        <byteman.server.ipaddress>${node0}</byteman.server.ipaddress>
                        <byteman.server.port>${byteman.port}</byteman.server.port>
                        <byteman.host>${node0}</byteman.host>
                        <byteman.port>${byteman.port}</byteman.port>
                        <jvm.args>${jvm.args.ip.server} ${modular.jdk.args} -Dmaven.repo.local=${settings.localRepository}</jvm.args>
                        <server.jvm2.args>${surefire.system.args} ${jvm.args.ip} -Djboss.bind.address=${node1} -Djboss.bind.address.management=${node1} -Djboss.bind.address.unsecure=${node1} -Dnode0=${node0} -Dnode1=${node1} ${modular.jdk.args}</server.jvm2.args>
                        <arquillian.launch>manual-mode</arquillian.launch>
                        <jboss.config.file.name>standalone-ha.xml</jboss.config.file.name>
                        <ryuk.container.timeout>60</ryuk.container.timeout>
                        <!-- needed for SSLEJBRemoteClientTestCase only, however setting them from within the test itself isn't possible -->
                        <javax.net.ssl.trustStore>${basedir}/target/test-classes/ejb3/ssl/jbossClient.truststore</javax.net.ssl.trustStore>
                        <javax.net.ssl.keyStore>${basedir}/target/test-classes/ejb3/ssl/jbossClient.keystore</javax.net.ssl.keyStore>
                        <javax.net.ssl.trustStorePassword>clientPassword</javax.net.ssl.trustStorePassword>
                        <javax.net.ssl.keyStorePassword>clientPassword</javax.net.ssl.keyStorePassword>
                        <!-- EJB client library hack, see WFLY-4973-->
                        <org.jboss.ejb.client.wildfly-testsuite-hack>true</org.jboss.ejb.client.wildfly-testsuite-hack>
                        <node0>${node0}</node0>
                        <node1>${node1}</node1>
                        <node2>${node2}</node2>
                        <node3>${node3}</node3>
                        <mcast>${mcast}</mcast>
                        <wildfly.ee.channel.groupId>${ee.maven.groupId}</wildfly.ee.channel.groupId>
                        <wildfly.ee.channel.version>${project.version}</wildfly.ee.channel.version>
                        <prospero.channel.version>${version.org.wildfly.prospero}</prospero.channel.version>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <stripVersion>true</stripVersion>
                            <includeGroupIds>org.jboss.byteman</includeGroupIds>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- -Dts.nomanualmode -->
        <profile>
            <id>ts.nomanualmode</id>
            <activation>
                <property>
                    <name>noManualmode</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Disable the surefire tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.plugin}</version>
                        <executions>
                            <execution>
                                <phase>none</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>none</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows.prefix</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <manifest.url.prefix>file:///</manifest.url.prefix>
                <!-- Disable multi-channel-provisioning execution for now, until we figure out how to pass the file:// url manifest -->
                <!-- TODO figure out why this doesn't work and fix it -->
                <multi.channel.provisioning.phase>none</multi.channel.provisioning.phase>
            </properties>
        </profile>
        <profile>
            <id>external.wildfly.channels</id>
            <activation>
                <property>
                    <name>external.wildfly.channels</name>
                </property>
            </activation>
            <properties>
                <!-- Disable multi-channel-provisioning execution to avoid interference between external settings and the test -->
                <multi.channel.provisioning.phase>none</multi.channel.provisioning.phase>
            </properties>
        </profile>
        <profile>
            <id>internal.wildfly.channels</id>
            <activation>
                <property>
                    <name>external.wildfly.channels</name>
                </property>
            </activation>
            <properties>
                <!-- Disable multi-channel-provisioning execution to avoid interference between external settings and the test -->
                <multi.channel.provisioning.phase>none</multi.channel.provisioning.phase>
            </properties>
        </profile>
    </profiles>
</project>
